# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_types.ipynb.

# %% auto 0
__all__ = ['Region', 'Window', 'VisualEventObservation', 'SoundSequenceObservation', 'GamepadEventObservation',
           'VibrationEventObservation', 'DiscreteEvent', 'Episode']

# %% ../nbs/00_types.ipynb 1
from dataclasses import dataclass
from typing import Any, Dict, List
import matplotlib.pyplot as plt
from datetime import datetime

# %% ../nbs/00_types.ipynb 3
@dataclass
class Region:
    left: int
    top: int
    right: int
    bottom: int

# %% ../nbs/00_types.ipynb 6
@dataclass
class Window:
    app_name: str
    sub_region: Region = None

# %% ../nbs/00_types.ipynb 10
@dataclass
class VisualEventObservation:
    timestamp: datetime
    data: Any
    def visualize(self):
        plt.imshow(self.data)
        try:
            # Format datetime object as string
            timestamp_str = timestamp.strftime('%Y-%m-%d %H:%M:%S')
            # Add timestamp as text to the plot
            plt.title(timestamp_str)
        except:
            pass
        plt.show()

# %% ../nbs/00_types.ipynb 12
@dataclass
class SoundSequenceObservation:
    start_timestamp: datetime
    end_timestamp: datetime
    data: Any

# %% ../nbs/00_types.ipynb 14
@dataclass
class GamepadEventObservation:
    timestamp: datetime
    code: str
    state: int

# %% ../nbs/00_types.ipynb 16
@dataclass
class VibrationEventObservation:
    timestamp: datetime
    motor: str
    speed: float

# %% ../nbs/00_types.ipynb 18
@dataclass
class DiscreteEvent:
    event_index: int
    timestamp: datetime
    VisualEvents: List[VisualEventObservation]
    GamepadEvents: List[GamepadEventObservation]
    VibrationEvents: List[VibrationEventObservation]
    SoundSequence: SoundSequenceObservation

# %% ../nbs/00_types.ipynb 20
@dataclass
class Episode:
    events: List[DiscreteEvent]
    meta_data: Dict[str, Any]
